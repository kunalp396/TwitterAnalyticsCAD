/*************************************************************
** Class generated by CodeTrigger, Version 4.8.6.9
** This class was generated on 18-11-2016 02:12:12
** Changes to this file may cause incorrect behaviour and will be lost if the code is regenerated
**************************************************************/
using System;
using System.Collections.Generic;
using TwitterAnalyticsDBL.DataObjects;

namespace TwitterAnalyticsDBL.BusinessObjects
{
	///<Summary>
	///Class definition
	///This is the definition of the class BOTimeZone.
	///</Summary>
	public partial class BOTimeZone : AzureSQLDBConn_BaseBusiness
	{
		#region member variables
		protected Int64? _id;
		protected string _timeZoneName;
		protected string _timeZoneDisplayName;
		

        /*collection member objects*******************/
        /*********************************************/
        #endregion

        #region class methods
        ///<Summary>
        ///Constructor
        ///This is the default constructor
        ///</Summary>
        ///<returns>
        ///void
        ///</returns>
        ///<parameters>
        ///
        ///</parameters>
        public BOTimeZone()
		{
		}

        /// <summary>
        /// 
        /// </summary>
        /// <param name="daoTweetCount"></param>
        protected internal BOTimeZone(DAOTimeZone daoTimeZone)
        {
            try
            {
                _id = daoTimeZone.Id;
                _timeZoneDisplayName = daoTimeZone.TimeZoneDisplayName;
                _timeZoneName = daoTimeZone.TimeZoneName;
              
            }
            catch
            {
                throw;
            }
        }

        ///<Summary>
        ///TweetCountCollection
        ///This method returns the collection of BOTimeZone objects
        ///</Summary>
        ///<returns>
        ///List[BOTimeZone]
        ///</returns>
        ///<parameters>
        ///
        ///</parameters>
        public static IList<BOTimeZone> TimeZoneCollection()
		{
			try
			{
				IList<BOTimeZone> BOTimeZoneCollection = new List<BOTimeZone>();
				IList<DAOTimeZone> daoTweetCountCollection = DAOTimeZone.SelectAll();
			
				foreach(DAOTimeZone daoTweetCount in daoTweetCountCollection)
					BOTimeZoneCollection.Add(new BOTimeZone(daoTweetCount));
			
				return BOTimeZoneCollection;
			}
			catch(Exception ex)
			{
				throw ex;
			}
		}
        
		
		#endregion

		#region member properties
		
		public virtual Int64? Id
		{
			get
			{
				 return _id;
			}
			set
			{
				_id = value;
			}
		}
		
		public virtual string TimeZoneName
        {
			get
			{
				 return _timeZoneName;
			}
			set
			{
				_timeZoneName = value;
			}
		}
		
		
		
		public virtual string TimeZoneDisplayName
        {
			get
			{
				 return _timeZoneDisplayName;
			}
			set
			{
				_timeZoneDisplayName = value;
			}
		}
		
		
		#endregion
	}
}
